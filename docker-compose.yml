version: "3"

volumes:
  static:

services:
  auth-db:
      container_name: mysqldb-auth
      image: mysql/mysql-server:8.0.23
      command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      restart: always
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_ROOT_HOST: "%"
        MYSQL_USER: root
        MYSQL_PASSWORD: root
      volumes:
        - ./init.sql:/data/application/init.sql
        - ./mysql-data/8.0.23:/var/lib/mysql
      ports:
        - 3307:3306
      expose:
        - 3307
        
  auth-service:
    container_name: auth-service
    build: ./mar-backend/auth-service/
    command: 
      - sh
      - -c
      - python manage.py makemigrations api
        && python manage.py migrate api
        && python manage.py migrate
        && python load_fixtures.py
        && python manage.py crontab add
        && gunicorn config.wsgi --bind 0.0.0.0:8000
    environment:
      - SIGNING_KEY=5ahp8kseKOVB_w-DTpQoK4Akl3nVy45Lmbev2NNm95wUyLytIxli6pHccX
      - FORCE_SCRIPT_NAME=/auth
      - STATIC_ROOT=/var/www/static
      - NAME=auth
      - USER=root
      - HOST=auth-db
      - PASSWORD=root
    volumes:
      - static:/var/www/static
    depends_on:
      - auth-db
    expose:
      - 8000

  nginx:
    container_name: nginx-service
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/var/www/static
    ports:
      - 80:80
    depends_on:
      - auth-service


networks:
  mar-net:
    external:
      name: mar_network
# docker network create mar_network
# docker-compose up --build
